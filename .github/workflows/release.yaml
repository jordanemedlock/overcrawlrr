name: Release build

on:
  workflow_dispatch:

jobs:
  semantic-release:
    name: Tag and release latest version
    runs-on: ubuntu-latest
    outputs:
      didRelease: ${{ steps.semver.outputs.new_release_published }}
      newVersion: ${{ steps.semver.outputs.new_release_version }}
      newVersionDocs: ${{ steps.semver.outputs.new_release_major_version }}
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Semantic Release
        id: semver
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set output
        run: |
          echo "newVersionDocs=${{ steps.semver.outputs.new_release_major_version }}.${{ steps.semver.outputs.new_release_minor_version }}" >> $GITHUB_OUTPUT

  build-and-push:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: semantic-release
    if: needs.semantic-release.outputs.didRelease == 'true'
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner  }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.semantic-release.outputs.newVersion }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  publish-docs:
    name: Publish documentation
    permissions:
      contents: write
    needs: [semantic-release]
    uses: ./.github/workflows/docs.yaml
    with:
      version: ${{ needs.semantic-release.outputs.newVersionDocs }}
      updateAlias: true

  discord:
    name: Send Discord Notification
    needs: [build-and-push, publish-docs]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Job Status
        uses: technote-space/workflow-conclusion-action@v3
      - name: Combine Job Status
        id: status
        run: |
          failures=(neutral, skipped, timed_out, action_required)
          if [[ ${array[@]} =~ $WORKFLOW_CONCLUSION ]]; then
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=$WORKFLOW_CONCLUSION" >> $GITHUB_OUTPUT
          fi
      - name: Post Status to Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ steps.status.outputs.status }}
          title: ${{ github.workflow }}
          nofail: true
